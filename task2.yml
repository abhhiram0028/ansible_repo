- name: Task 2
  hosts: lists
  gather_facts: false
  vars_files:
    - vars1.yaml
    - vars2.yaml
    - vars3.yaml
    - vars4.yaml
    - vars5.yaml
    - vars6.yaml
  tasks:
    - name: Use case 1.a
      ansible.builtin.debug:
        msg: "{{ item.name }}, {{ item.ip }}, {{ item.role }}"
      loop: "{{ servers_1 }}"

    - name: Use case 1.b
      ansible.builtin.debug:
        msg: " Server {{ item.name }} is {{ item.role }} and {{ item.env }}"
      loop: "{{ servers_1 }}"

    - name: Filter users agewise
      ansible.builtin.set_fact:
        new_users: "{{ users | selectattr('age', '>', 30) }}"

    - name: Print users>30(Use case 2)
      ansible.builtin.debug:
        msg: "Users above 30 are: {{ new_users }}"

    - name: Merging
      ansible.builtin.set_fact:
        projects: "{{ [project_a, project_b] }}"

    - name: Ordered
      ansible.builtin.set_fact:
        desc_projects: "{{ projects | sort(attribute='budget') }}"

    - name: Print ordered(Use case 3)
      ansible.builtin.debug:
        msg: "Ordered budget list: {{ desc_projects }}"

    - name: Filter 0 course
      ansible.builtin.set_fact:
        enrolled_students: "{{ students | selectattr('courses', '!=', []) }}"

    - name: Students with courses(Use case 4)
      ansible.builtin.debug:
        msg: "{{ enrolled_students }}"

    - name: Add server with role "app"
      ansible.builtin.set_fact:
        serversnew: "{{ servers_5 + [{'name': 'app1', 'ip': '192.168.1.3', 'role': 'app'}] }}"

    - name: Replace web1 role
      ansible.builtin.set_fact:
        rolee: "{{ serversnew | map('combine', {'role': 'app'}) if item.name == 'web1' }}"
      loop: "{{ serversnew }}"

    - name: Print servers(Use case 5)
      ansible.builtin.debug:
        msg: "Final servers list: {{ rolee }}"

    - name: List to dictionary
      ansible.builtin.set_fact:
        dicto: "{{ employees | combine({item.name: item.salary}) }}"
      loop: "{{ employees }}"

    - name: Print
      ansible.builtin.debug:
        msg: "{{ dicto }}"
